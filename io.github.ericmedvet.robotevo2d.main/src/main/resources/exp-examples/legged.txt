ea.experiment(
  runs = (randomGenerator = (seed = [1:1:3]) * [ea.rg.defaultRG()]) * [
    ea.run(
      solver = ea.s.numGA(
        mapper = er.m.parametrizedHeteroBrains(target = s.a.numLeggedHybridModularRobot(
          modules = 4 * [
            s.a.l.module(
              trunkLength = 10;
              legChunks = 2 * [s.a.l.legChunk()];
              trunkSensors = [s.s.rv(a = 0); s.s.rv(a = 90); s.s.sin()];
              downConnectorSensors = [s.s.d(a = -90; r = 1)]
            )
          ];
          function = ds.num.noised(inner=ds.num.mlp();inputSigma=0.25)
        ));
        nEval = 100;
        nPop = 10
      );
      problem = ea.p.totalOrder(
        qFunction = s.taskRunner(task = s.task.locomotion(terrain = sim.terrain.uphill(a = 5); duration = 10));
        cFunction = s.task.locomotion.xVelocity();
        type = maximize
      )
    )
  ];
  listeners = [
    ea.l.tui(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%5d");
        ea.nf.bestFitness(f = ea.nf.f(outerF = s.task.l.xVelocity(); s = "%5.2f"));
        ea.nf.fitnessHist(f = ea.nf.f(outerF = s.task.l.xVelocity()))
      ];
      plots = [
        ea.plot.fitness(x = ea.nf.progress(); f = ea.nf.f(outerF = s.task.l.xVelocity()); sort = max; minY = 0; maxX = 1)
      ]
    )
  ]
)